// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/readyz": {
            "get": {
                "description": "Check Grasshopper is ready",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin] System management"
                ],
                "summary": "Check Ready",
                "operationId": "health-check-readyz",
                "responses": {
                    "200": {
                        "description": "Successfully get ready state.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Failed to check ready state.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software/migrate": {
            "post": {
                "description": "Migrate pieces of software to target.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Software migration APIs"
                ],
                "summary": "Migrate Software",
                "operationId": "migrate-software",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of target namespace.",
                        "name": "nsId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of target MCI.",
                        "name": "mciId",
                        "in": "query"
                    },
                    {
                        "description": "Software migrate request.",
                        "name": "softwareMigrateReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated pieces of software.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateRes"
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to migrate pieces of software.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software/migrate/log/{executionId}": {
            "get": {
                "description": "Get the software migration log.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Software migration APIs"
                ],
                "summary": "Get Software Migration Log",
                "operationId": "get-software-migration-log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the software migration execution.",
                        "name": "executionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get the software migration log",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationLogRes"
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get the software migration log",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software/migration_list": {
            "post": {
                "description": "Get software migration list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Migration] Software migration APIs"
                ],
                "summary": "Get Migration List",
                "operationId": "get-migration-list",
                "parameters": [
                    {
                        "description": "Refined software list.",
                        "name": "softwareMigrateReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/softwaremodel.SourceGroupSoftwareProperty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get software migration list.",
                        "schema": {
                            "$ref": "#/definitions/softwaremodel.SourceGroupSoftwareProperty"
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get software migration list.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationLogRes": {
            "type": "object",
            "properties": {
                "install_log": {
                    "type": "string"
                },
                "migration_log": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SimpleMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateReq": {
            "type": "object",
            "required": [
                "source_connection_info_id",
                "target"
            ],
            "properties": {
                "migration_list": {
                    "$ref": "#/definitions/softwaremodel.MigrationList"
                },
                "source_connection_info_id": {
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Target"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateRes": {
            "type": "object",
            "properties": {
                "execution_id": {
                    "type": "string"
                },
                "target_mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.TargetMapping"
                    }
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Target": {
            "type": "object",
            "required": [
                "mci_id",
                "namespace_id",
                "vm_id"
            ],
            "properties": {
                "mci_id": {
                    "type": "string"
                },
                "namespace_id": {
                    "type": "string"
                },
                "vm_id": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.TargetMapping": {
            "type": "object",
            "required": [
                "target"
            ],
            "properties": {
                "source_connection_info_id": {
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Target"
                }
            }
        },
        "softwaremodel.Binary": {
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "properties": {
                "binary_path": {
                    "type": "string"
                },
                "custom_configs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_data_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "needed_libraries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "softwaremodel.BinaryMigrationInfo": {
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "properties": {
                "binary_path": {
                    "type": "string"
                },
                "custom_configs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_data_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "needed_libraries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "softwaremodel.Container": {
            "type": "object",
            "required": [
                "container_id",
                "container_image",
                "container_status",
                "name",
                "network_mode",
                "restart_policy",
                "runtime"
            ],
            "properties": {
                "container_id": {
                    "type": "string"
                },
                "container_image": {
                    "$ref": "#/definitions/softwaremodel.ContainerImage"
                },
                "container_ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.ContainerPort"
                    }
                },
                "container_status": {
                    "type": "string"
                },
                "docker_compose_path": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.Env"
                    }
                },
                "mount_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "network_mode": {
                    "type": "string"
                },
                "restart_policy": {
                    "type": "string"
                },
                "runtime": {
                    "description": "Which runtime uses for the container (Docker, Podman)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/softwaremodel.SoftwareContainerRuntimeType"
                        }
                    ]
                }
            }
        },
        "softwaremodel.ContainerImage": {
            "type": "object",
            "required": [
                "image_architecture",
                "image_hash",
                "image_name",
                "image_version"
            ],
            "properties": {
                "image_architecture": {
                    "$ref": "#/definitions/softwaremodel.SoftwareArchitecture"
                },
                "image_hash": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                },
                "image_version": {
                    "type": "string"
                }
            }
        },
        "softwaremodel.ContainerMigrationInfo": {
            "type": "object",
            "required": [
                "container_id",
                "container_image",
                "container_status",
                "name",
                "network_mode",
                "restart_policy",
                "runtime"
            ],
            "properties": {
                "container_id": {
                    "type": "string"
                },
                "container_image": {
                    "$ref": "#/definitions/softwaremodel.ContainerImage"
                },
                "container_ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.ContainerPort"
                    }
                },
                "container_status": {
                    "type": "string"
                },
                "docker_compose_path": {
                    "type": "string"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.Env"
                    }
                },
                "mount_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "network_mode": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "restart_policy": {
                    "type": "string"
                },
                "runtime": {
                    "description": "Which runtime uses for the container (Docker, Podman, ...)",
                    "type": "string"
                }
            }
        },
        "softwaremodel.ContainerPort": {
            "type": "object",
            "required": [
                "container_port",
                "host_ip",
                "host_port",
                "protocol"
            ],
            "properties": {
                "container_port": {
                    "description": "NetworkSettings.Ports.{Port}/{Protocol} -\u003e {Port}",
                    "type": "integer"
                },
                "host_ip": {
                    "description": "NetworkSettings.Ports.{Port}/{Protocol}.HostIp",
                    "type": "string"
                },
                "host_port": {
                    "description": "NetworkSettings.Ports.{Port}/{Protocol}.HostPort",
                    "type": "integer"
                },
                "protocol": {
                    "description": "NetworkSettings.Ports.{Port}/{Protocol} -\u003e {Protocol}",
                    "type": "string"
                }
            }
        },
        "softwaremodel.Env": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "softwaremodel.Kubernetes": {
            "type": "object",
            "required": [
                "kube_config",
                "resources",
                "version"
            ],
            "properties": {
                "kube_config": {
                    "type": "string"
                },
                "resources": {
                    "type": "object",
                    "additionalProperties": true
                },
                "version": {
                    "description": "Same as release",
                    "type": "string"
                }
            }
        },
        "softwaremodel.KubernetesMigrationInfo": {
            "type": "object",
            "required": [
                "kube_config",
                "resources",
                "velero",
                "version"
            ],
            "properties": {
                "kube_config": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "resources": {
                    "type": "object",
                    "additionalProperties": true
                },
                "velero": {
                    "$ref": "#/definitions/softwaremodel.KubernetesVelero"
                },
                "version": {
                    "description": "Same as release",
                    "type": "string"
                }
            }
        },
        "softwaremodel.KubernetesVelero": {
            "type": "object",
            "required": [
                "backup_location_config",
                "bucket",
                "provider"
            ],
            "properties": {
                "backup_location_config": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "features": {
                    "type": "string"
                },
                "plugins": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "secret_file": {
                    "type": "string"
                }
            }
        },
        "softwaremodel.MigrationList": {
            "type": "object",
            "properties": {
                "binaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.BinaryMigrationInfo"
                    }
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.ContainerMigrationInfo"
                    }
                },
                "kubernetes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.KubernetesMigrationInfo"
                    }
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.PackageMigrationInfo"
                    }
                }
            }
        },
        "softwaremodel.Package": {
            "type": "object",
            "required": [
                "name",
                "needed_packages",
                "type",
                "version"
            ],
            "properties": {
                "custom_configs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_data_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gpg_key_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "need_to_delete_packages": {
                    "type": "string"
                },
                "needed_packages": {
                    "type": "string"
                },
                "repo_url": {
                    "type": "string"
                },
                "repo_use_os_version_code": {
                    "type": "boolean",
                    "default": false
                },
                "type": {
                    "$ref": "#/definitions/softwaremodel.SoftwarePackageType"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "softwaremodel.PackageMigrationInfo": {
            "type": "object",
            "required": [
                "name",
                "needed_packages",
                "version"
            ],
            "properties": {
                "custom_configs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "custom_data_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gpg_key_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "need_to_delete_packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "needed_packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "integer"
                },
                "repo_url": {
                    "type": "string"
                },
                "repo_use_os_version_code": {
                    "type": "boolean",
                    "default": false
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "softwaremodel.SoftwareArchitecture": {
            "type": "string",
            "enum": [
                "common",
                "x86_64",
                "x86",
                "armv5",
                "armv6",
                "armv7",
                "arm64v8"
            ],
            "x-enum-varnames": [
                "SoftwareArchitectureCommon",
                "SoftwareArchitectureX8664",
                "SoftwareArchitectureX86",
                "SoftwareArchitectureARMv5",
                "SoftwareArchitectureARMv6",
                "SoftwareArchitectureARMv7",
                "SoftwareArchitectureARM64v8"
            ]
        },
        "softwaremodel.SoftwareContainerRuntimeType": {
            "type": "string",
            "enum": [
                "docker",
                "podman"
            ],
            "x-enum-varnames": [
                "SoftwareContainerRuntimeTypeDocker",
                "SoftwareContainerRuntimeTypePodman"
            ]
        },
        "softwaremodel.SoftwareList": {
            "type": "object",
            "properties": {
                "binaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.Binary"
                    }
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.Container"
                    }
                },
                "kubernetes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.Kubernetes"
                    }
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.Package"
                    }
                }
            }
        },
        "softwaremodel.SoftwarePackageType": {
            "type": "string",
            "enum": [
                "deb",
                "rpm"
            ],
            "x-enum-comments": {
                "SoftwarePackageTypeDEB": "Debian based package type",
                "SoftwarePackageTypeRPM": "RHEL based package type"
            },
            "x-enum-varnames": [
                "SoftwarePackageTypeDEB",
                "SoftwarePackageTypeRPM"
            ]
        },
        "softwaremodel.SourceConnectionInfoSoftwareProperty": {
            "type": "object",
            "required": [
                "connection_id"
            ],
            "properties": {
                "connection_id": {
                    "type": "string"
                },
                "softwares": {
                    "$ref": "#/definitions/softwaremodel.SoftwareList"
                }
            }
        },
        "softwaremodel.SourceGroupSoftwareProperty": {
            "type": "object",
            "required": [
                "source_group_id"
            ],
            "properties": {
                "connection_info_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/softwaremodel.SourceConnectionInfoSoftwareProperty"
                    }
                },
                "source_group_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "latest",
	Host:             "",
	BasePath:         "/grasshopper",
	Schemes:          []string{},
	Title:            "CM-Grasshopper REST API",
	Description:      "Software migration management module",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
