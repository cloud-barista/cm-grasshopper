// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/readyz": {
            "get": {
                "description": "Check Grasshopper is ready",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Admin]\tSystem management"
                ],
                "summary": "Check Ready",
                "operationId": "health-check-readyz",
                "responses": {
                    "200": {
                        "description": "Successfully get ready state.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SimpleMsg"
                        }
                    },
                    "500": {
                        "description": "Failed to check ready state.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software": {
            "get": {
                "description": "Get a list of connection information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Software]"
                ],
                "summary": "List Software",
                "operationId": "list-software",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Installation type of the software",
                        "name": "install_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name of the software",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Version of the software",
                        "name": "version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Operating system of the software",
                        "name": "os",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Operating system version",
                        "name": "os_version",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Architecture of the software",
                        "name": "architecture",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Matching names of the software",
                        "name": "match_names",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Packages needed to install for the software",
                        "name": "needed_packages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Packages that need to be deleted for the software",
                        "name": "need_to_delete_packages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Repository URL for install the software",
                        "name": "repo_url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "GPG key URL for install the software",
                        "name": "gpg_key_url",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "If repository URL uses OS version code. (For debian based OSs.)",
                        "name": "repo_use_os_version_code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get a list of software.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Software"
                            }
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get a list of software.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software/migrate": {
            "post": {
                "description": "Migrate pieces of software to target.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Software]"
                ],
                "summary": "Migrate Software",
                "operationId": "migrate-software",
                "parameters": [
                    {
                        "description": "Software migrate request.",
                        "name": "softwareMigrateReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully migrated pieces of software.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateRes"
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to migrate pieces of software.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software/migrate/log/{executionId}": {
            "get": {
                "description": "Get the software migration log.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Software]"
                ],
                "summary": "Get Software Migration Log",
                "operationId": "get-software-migration-log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the software migration execution.",
                        "name": "executionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get the software migration log",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationLogRes"
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get the software migration log",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software/migration_list/{sgId}": {
            "get": {
                "description": "Get software migration list.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Software]"
                ],
                "summary": "Get Migration List",
                "operationId": "get-migration-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the SourceGroup",
                        "name": "sgId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully get software migration list.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationListRes"
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get software migration list.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software/register": {
            "post": {
                "description": "Register the software.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Software]"
                ],
                "summary": "Register Software",
                "operationId": "register-software",
                "parameters": [
                    {
                        "description": "Software info",
                        "name": "softwareRegisterReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareRegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered the software.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareRegisterReq"
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to sent SSH command.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/software/{softwareId}": {
            "delete": {
                "description": "Delete the software.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Software]"
                ],
                "summary": "Delete Software",
                "operationId": "delete-software",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the software.",
                        "name": "softwareId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully update the software",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SimpleMsg"
                        }
                    },
                    "400": {
                        "description": "Sent bad request.",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete the software",
                        "schema": {
                            "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationListRes": {
            "type": "object",
            "properties": {
                "server": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationServer"
                    }
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationLogRes": {
            "type": "object",
            "properties": {
                "install_log": {
                    "type": "string"
                },
                "migration_log": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationServer": {
            "type": "object",
            "properties": {
                "connection_info_id": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "migration_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationSoftwareInfo"
                    }
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationSoftwareInfo": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "integer"
                },
                "software_id": {
                    "type": "string"
                },
                "software_install_type": {
                    "type": "string"
                },
                "software_name": {
                    "type": "string"
                },
                "software_version": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SimpleMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Software": {
            "type": "object",
            "required": [
                "architecture",
                "created_at",
                "install_type",
                "match_names",
                "name",
                "needed_packages",
                "os",
                "os_version",
                "updated_at",
                "uuid",
                "version"
            ],
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "gpg_key_url": {
                    "type": "string"
                },
                "install_type": {
                    "type": "string"
                },
                "match_names": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "need_to_delete_packages": {
                    "type": "string"
                },
                "needed_packages": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "os_version": {
                    "type": "string"
                },
                "repo_url": {
                    "type": "string"
                },
                "repo_use_os_version_code": {
                    "type": "boolean",
                    "default": false
                },
                "updated_at": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateReq": {
            "type": "object",
            "required": [
                "software_ids",
                "source_connection_info_id",
                "target"
            ],
            "properties": {
                "software_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_connection_info_id": {
                    "type": "string"
                },
                "target": {
                    "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Target"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateRes": {
            "type": "object",
            "properties": {
                "execution_id": {
                    "type": "string"
                },
                "migration_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationSoftwareInfo"
                    }
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareRegisterReq": {
            "type": "object",
            "required": [
                "architecture",
                "install_type",
                "match_names",
                "name",
                "needed_packages",
                "os",
                "os_version",
                "version"
            ],
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "gpg_key_url": {
                    "type": "string"
                },
                "install_type": {
                    "type": "string"
                },
                "match_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "need_to_delete_packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "needed_packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "os": {
                    "type": "string"
                },
                "os_version": {
                    "type": "string"
                },
                "repo_url": {
                    "type": "string"
                },
                "repo_use_os_version_code": {
                    "type": "boolean",
                    "default": false
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Target": {
            "type": "object",
            "required": [
                "mci_id",
                "namespace_id",
                "vm_id"
            ],
            "properties": {
                "mci_id": {
                    "type": "string"
                },
                "namespace_id": {
                    "type": "string"
                },
                "vm_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "latest",
	Host:             "",
	BasePath:         "/grasshopper",
	Schemes:          []string{},
	Title:            "CM-Grasshopper REST API",
	Description:      "Software migration management module",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
