basePath: /grasshopper
definitions:
  github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationLogRes:
    properties:
      install_log:
        type: string
      migration_log:
        type: string
      uuid:
        type: string
    type: object
  github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SimpleMsg:
    properties:
      message:
        type: string
    type: object
  github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateReq:
    properties:
      migration_list:
        $ref: '#/definitions/softwaremodel.MigrationList'
      source_connection_info_id:
        type: string
      target:
        $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Target'
    required:
    - source_connection_info_id
    - target
    type: object
  github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateRes:
    properties:
      execution_id:
        type: string
      target_mappings:
        items:
          $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.TargetMapping'
        type: array
    type: object
  github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Target:
    properties:
      mci_id:
        type: string
      namespace_id:
        type: string
      vm_id:
        type: string
    required:
    - mci_id
    - namespace_id
    - vm_id
    type: object
  github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.TargetMapping:
    properties:
      source_connection_info_id:
        type: string
      target:
        $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.Target'
    required:
    - target
    type: object
  softwaremodel.Binary:
    properties:
      binary_path:
        type: string
      custom_configs:
        items:
          type: string
        type: array
      custom_data_paths:
        items:
          type: string
        type: array
      name:
        type: string
      needed_libraries:
        items:
          type: string
        type: array
      version:
        type: string
    required:
    - name
    - version
    type: object
  softwaremodel.BinaryMigrationInfo:
    properties:
      binary_path:
        type: string
      custom_configs:
        items:
          type: string
        type: array
      custom_data_paths:
        items:
          type: string
        type: array
      name:
        type: string
      needed_libraries:
        items:
          type: string
        type: array
      order:
        type: integer
      version:
        type: string
    required:
    - name
    - version
    type: object
  softwaremodel.Container:
    properties:
      container_id:
        type: string
      container_image:
        $ref: '#/definitions/softwaremodel.ContainerImage'
      container_ports:
        items:
          $ref: '#/definitions/softwaremodel.ContainerPort'
        type: array
      container_status:
        type: string
      docker_compose_path:
        type: string
      envs:
        items:
          $ref: '#/definitions/softwaremodel.Env'
        type: array
      mount_paths:
        items:
          type: string
        type: array
      name:
        type: string
      network_mode:
        type: string
      restart_policy:
        type: string
      runtime:
        allOf:
        - $ref: '#/definitions/softwaremodel.SoftwareContainerRuntimeType'
        description: Which runtime uses for the container (Docker, Podman)
    required:
    - container_id
    - container_image
    - container_status
    - name
    - network_mode
    - restart_policy
    - runtime
    type: object
  softwaremodel.ContainerImage:
    properties:
      image_architecture:
        $ref: '#/definitions/softwaremodel.SoftwareArchitecture'
      image_hash:
        type: string
      image_name:
        type: string
      image_version:
        type: string
    required:
    - image_architecture
    - image_hash
    - image_name
    - image_version
    type: object
  softwaremodel.ContainerMigrationInfo:
    properties:
      container_id:
        type: string
      container_image:
        $ref: '#/definitions/softwaremodel.ContainerImage'
      container_ports:
        items:
          $ref: '#/definitions/softwaremodel.ContainerPort'
        type: array
      container_status:
        type: string
      docker_compose_path:
        type: string
      envs:
        items:
          $ref: '#/definitions/softwaremodel.Env'
        type: array
      mount_paths:
        items:
          type: string
        type: array
      name:
        type: string
      network_mode:
        type: string
      order:
        type: integer
      restart_policy:
        type: string
      runtime:
        description: Which runtime uses for the container (Docker, Podman, ...)
        type: string
    required:
    - container_id
    - container_image
    - container_status
    - name
    - network_mode
    - restart_policy
    - runtime
    type: object
  softwaremodel.ContainerPort:
    properties:
      container_port:
        description: NetworkSettings.Ports.{Port}/{Protocol} -> {Port}
        type: integer
      host_ip:
        description: NetworkSettings.Ports.{Port}/{Protocol}.HostIp
        type: string
      host_port:
        description: NetworkSettings.Ports.{Port}/{Protocol}.HostPort
        type: integer
      protocol:
        description: NetworkSettings.Ports.{Port}/{Protocol} -> {Protocol}
        type: string
    required:
    - container_port
    - host_ip
    - host_port
    - protocol
    type: object
  softwaremodel.Env:
    properties:
      name:
        type: string
      value:
        type: string
    required:
    - name
    type: object
  softwaremodel.Kubernetes:
    properties:
      kube_config:
        type: string
      resources:
        additionalProperties: true
        type: object
      version:
        description: Same as release
        type: string
    required:
    - kube_config
    - resources
    - version
    type: object
  softwaremodel.KubernetesMigrationInfo:
    properties:
      kube_config:
        type: string
      order:
        type: integer
      resources:
        additionalProperties: true
        type: object
      velero:
        $ref: '#/definitions/softwaremodel.KubernetesVelero'
      version:
        description: Same as release
        type: string
    required:
    - kube_config
    - resources
    - velero
    - version
    type: object
  softwaremodel.KubernetesVelero:
    properties:
      backup_location_config:
        type: string
      bucket:
        type: string
      features:
        type: string
      plugins:
        type: string
      provider:
        type: string
      secret_file:
        type: string
    required:
    - backup_location_config
    - bucket
    - provider
    type: object
  softwaremodel.MigrationList:
    properties:
      binaries:
        items:
          $ref: '#/definitions/softwaremodel.BinaryMigrationInfo'
        type: array
      containers:
        items:
          $ref: '#/definitions/softwaremodel.ContainerMigrationInfo'
        type: array
      kubernetes:
        items:
          $ref: '#/definitions/softwaremodel.KubernetesMigrationInfo'
        type: array
      packages:
        items:
          $ref: '#/definitions/softwaremodel.PackageMigrationInfo'
        type: array
    type: object
  softwaremodel.Package:
    properties:
      custom_configs:
        items:
          type: string
        type: array
      custom_data_paths:
        items:
          type: string
        type: array
      gpg_key_url:
        type: string
      name:
        type: string
      need_to_delete_packages:
        type: string
      needed_packages:
        type: string
      repo_url:
        type: string
      repo_use_os_version_code:
        default: false
        type: boolean
      type:
        $ref: '#/definitions/softwaremodel.SoftwarePackageType'
      version:
        type: string
    required:
    - name
    - needed_packages
    - type
    - version
    type: object
  softwaremodel.PackageMigrationInfo:
    properties:
      custom_configs:
        items:
          type: string
        type: array
      custom_data_paths:
        items:
          type: string
        type: array
      gpg_key_url:
        type: string
      name:
        type: string
      need_to_delete_packages:
        items:
          type: string
        type: array
      needed_packages:
        items:
          type: string
        type: array
      order:
        type: integer
      repo_url:
        type: string
      repo_use_os_version_code:
        default: false
        type: boolean
      version:
        type: string
    required:
    - name
    - needed_packages
    - version
    type: object
  softwaremodel.SoftwareArchitecture:
    enum:
    - common
    - x86_64
    - x86
    - armv5
    - armv6
    - armv7
    - arm64v8
    type: string
    x-enum-varnames:
    - SoftwareArchitectureCommon
    - SoftwareArchitectureX8664
    - SoftwareArchitectureX86
    - SoftwareArchitectureARMv5
    - SoftwareArchitectureARMv6
    - SoftwareArchitectureARMv7
    - SoftwareArchitectureARM64v8
  softwaremodel.SoftwareContainerRuntimeType:
    enum:
    - docker
    - podman
    type: string
    x-enum-varnames:
    - SoftwareContainerRuntimeTypeDocker
    - SoftwareContainerRuntimeTypePodman
  softwaremodel.SoftwareList:
    properties:
      binaries:
        items:
          $ref: '#/definitions/softwaremodel.Binary'
        type: array
      containers:
        items:
          $ref: '#/definitions/softwaremodel.Container'
        type: array
      kubernetes:
        items:
          $ref: '#/definitions/softwaremodel.Kubernetes'
        type: array
      packages:
        items:
          $ref: '#/definitions/softwaremodel.Package'
        type: array
    type: object
  softwaremodel.SoftwarePackageType:
    enum:
    - deb
    - rpm
    type: string
    x-enum-comments:
      SoftwarePackageTypeDEB: Debian based package type
      SoftwarePackageTypeRPM: RHEL based package type
    x-enum-varnames:
    - SoftwarePackageTypeDEB
    - SoftwarePackageTypeRPM
  softwaremodel.SourceConnectionInfoSoftwareProperty:
    properties:
      connection_id:
        type: string
      softwares:
        $ref: '#/definitions/softwaremodel.SoftwareList'
    required:
    - connection_id
    type: object
  softwaremodel.SourceGroupSoftwareProperty:
    properties:
      connection_info_list:
        items:
          $ref: '#/definitions/softwaremodel.SourceConnectionInfoSoftwareProperty'
        type: array
      source_group_id:
        type: string
    required:
    - source_group_id
    type: object
info:
  contact: {}
  description: Software migration management module
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: CM-Grasshopper REST API
  version: latest
paths:
  /readyz:
    get:
      consumes:
      - application/json
      description: Check Grasshopper is ready
      operationId: health-check-readyz
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get ready state.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SimpleMsg'
        "500":
          description: Failed to check ready state.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse'
      summary: Check Ready
      tags:
      - '[Admin] System management'
  /software/migrate:
    post:
      consumes:
      - application/json
      description: Migrate pieces of software to target.
      operationId: migrate-software
      parameters:
      - description: ID of target namespace.
        in: query
        name: nsId
        type: string
      - description: ID of target MCI.
        in: query
        name: mciId
        type: string
      - description: Software migrate request.
        in: body
        name: softwareMigrateReq
        required: true
        schema:
          $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully migrated pieces of software.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.SoftwareMigrateRes'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to migrate pieces of software.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse'
      summary: Migrate Software
      tags:
      - '[Migration] Software migration APIs'
  /software/migrate/log/{executionId}:
    get:
      consumes:
      - application/json
      description: Get the software migration log.
      operationId: get-software-migration-log
      parameters:
      - description: ID of the software migration execution.
        in: path
        name: executionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get the software migration log
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_model.MigrationLogRes'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get the software migration log
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse'
      summary: Get Software Migration Log
      tags:
      - '[Migration] Software migration APIs'
  /software/migration_list:
    post:
      consumes:
      - application/json
      description: Get software migration list.
      operationId: get-migration-list
      parameters:
      - description: Refined software list.
        in: body
        name: softwareMigrateReq
        required: true
        schema:
          $ref: '#/definitions/softwaremodel.SourceGroupSoftwareProperty'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get software migration list.
          schema:
            $ref: '#/definitions/softwaremodel.SourceGroupSoftwareProperty'
        "400":
          description: Sent bad request.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse'
        "500":
          description: Failed to get software migration list.
          schema:
            $ref: '#/definitions/github_com_cloud-barista_cm-grasshopper_pkg_api_rest_common.ErrorResponse'
      summary: Get Migration List
      tags:
      - '[Migration] Software migration APIs'
swagger: "2.0"
